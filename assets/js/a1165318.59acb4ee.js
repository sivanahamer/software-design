"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7430],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>m});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function r(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=t.createContext({}),c=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=c(a),g=i,m=u["".concat(s,".").concat(g)]||u[g]||d[g]||o;return a?t.createElement(m,l(l({ref:n},p),{},{components:a})):t.createElement(m,l({ref:n},p))}));function m(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=a.length,l=new Array(o);l[0]=g;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[u]="string"==typeof e?e:i,l[1]=r;for(var c=2;c<o;c++)l[c]=a[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},5496:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=a(7462),i=(a(7294),a(3905));const o={},l="Patr\xf3n Singleton",r={unversionedId:"patterns/creacionales/singleton/README",id:"patterns/creacionales/singleton/README",title:"Patr\xf3n Singleton",description:"Integrantes",source:"@site/docs/5.patterns/creacionales/singleton/README.md",sourceDirName:"5.patterns/creacionales/singleton",slug:"/patterns/creacionales/singleton/",permalink:"/software-design/docs/patterns/creacionales/singleton/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/5.patterns/creacionales/singleton/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PROTOTYPE",permalink:"/software-design/docs/patterns/creacionales/prototype/"},next:{title:"Estructurales",permalink:"/software-design/docs/category/estructurales"}},s={},c=[{value:"Integrantes",id:"integrantes",level:2},{value:"Problema",id:"problema",level:2},{value:"Soluci\xf3n",id:"soluci\xf3n",level:2},{value:"Ejemplos",id:"ejemplos",level:2},{value:"Tipos de Inicializaci\xf3n",id:"tipos-de-inicializaci\xf3n",level:3},{value:"Ejemplo en java de un objeto singleton",id:"ejemplo-en-java-de-un-objeto-singleton",level:3},{value:"Consecuencias",id:"consecuencias",level:2},{value:"Positivas",id:"positivas",level:3},{value:"Negativas",id:"negativas",level:3},{value:"Implementaci\xf3n",id:"implementaci\xf3n",level:2},{value:"Relaci\xf3n con otros patrones",id:"relaci\xf3n-con-otros-patrones",level:2}],p={toc:c},u="wrapper";function d(e){let{components:n,...o}=e;return(0,i.kt)(u,(0,t.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"patr\xf3n-singleton"},"Patr\xf3n Singleton"),(0,i.kt)("h2",{id:"integrantes"},"Integrantes"),(0,i.kt)("p",null,"Mauricio Delgado Leandro B82553"),(0,i.kt)("h2",{id:"problema"},"Problema"),(0,i.kt)("p",null,"El patr\xf3n Singleton es parte de los patrones creacionales. Se implementa para asegurarse que una clase tenga una \xfanica instancia y acceso global a dicha instancia."),(0,i.kt)("p",null,"Este patr\xf3n resuelve dos problemas al mismo tiempo, no cumpliendo con el principio de ",(0,i.kt)("strong",{parentName:"p"},"Responsabilidad \xdanica"),":"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Permitir una instancia \xfanica"),(0,i.kt)("li",{parentName:"ol"},"Garantizar acceso global a esta instancia")),(0,i.kt)("h2",{id:"soluci\xf3n"},"Soluci\xf3n"),(0,i.kt)("p",null,"Para garantizar la implementaci\xf3n correcta del patr\xf3n singleton se deben cumplir dos requisitos:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Crear un constructor privado de la clase"),(0,i.kt)("li",{parentName:"ol"},"Crear m\xe9todo getInstance() ")),(0,i.kt)("p",null,"El m\xe9todo getInstance actuar\xe1 como constructor de la clase y punto de acceso a la \xfanica instancia. La siguiente figura muestra el diagrama de una clase Singleton en la que se cumplen ambos requisitos. "),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Solucion Singleton",src:a(8291).Z,width:"504",height:"513"})),(0,i.kt)("h2",{id:"ejemplos"},"Ejemplos"),(0,i.kt)("h3",{id:"tipos-de-inicializaci\xf3n"},"Tipos de Inicializaci\xf3n"),(0,i.kt)("p",null,"Existen 4 tipos de inicializaci\xf3n de una clase singleton:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Eager/Impaciente\nAc\xe1 se crea la instancia \xfanica sin saber si se necesita.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class EagerInitializedSingleton {\n    // Se inicializa antes de saber si se necesita la instancia\n    private static final EagerInitializedSingleton instance = new EagerInitializedSingleton();\n    \n    private EagerInitializedSingleton() {\n        // constructor privado\n    }\n    \n    public static EagerInitializedSingleton getInstance() {\n        return instance;\n    }\n}\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Clasica\nEsta implementaci\xf3n es la m\xe1s com\xfan, se crea la instancia hasta que sea necesitada. Aunque puede dar problemas de concurrencia. ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Singleton {\n    private static Singleton instance;\n    \n    private Singleton() {\n        // constructor privado\n    }\n    \n    public static Singleton getInstance() {\n        if (instance == null) {\n            instance = new Singleton();\n        }\n        return instance;\n    }\n}\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Thread Safe\nEsta inicializaci\xf3n es la versi\xf3n thread safe de la inicializaci\xf3n cl\xe1sica. Se asegura que no existan problemas de concurrencia. ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class ThreadSafeSingleton {\n    private static ThreadSafeSingleton instance;\n    \n    private ThreadSafeSingleton() {\n        // constructor privado\n    }\n    \n    public static synchronized ThreadSafeSingleton getInstance() {\n        if (instance == null) {\n            instance = new ThreadSafeSingleton();\n        }\n        return instance;\n    }\n}\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Double Checked Locking\nEn esta inicializaci\xf3n se hace thread safe \xfanicamente la creaci\xf3n de la instancia y se confirma dos veces en caso de que m\xe1s de un proceso intente crear la instancia. Esta implementaci\xf3n es la menos frecuente.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class DoubleCheckedLockingSingleton {\n    private static volatile DoubleCheckedLockingSingleton instance;\n    \n    private DoubleCheckedLockingSingleton() {\n        // constructor privado\n    }\n    \n    public static DoubleCheckedLockingSingleton getInstance() {\n        if (instance == null) {\n            synchronized (DoubleCheckedLockingSingleton.class) {\n                if (instance == null) {\n                    instance = new DoubleCheckedLockingSingleton();\n                }\n            }\n        }\n        return instance;\n    }\n}\n")),(0,i.kt)("h3",{id:"ejemplo-en-java-de-un-objeto-singleton"},"Ejemplo en java de un objeto singleton"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class Singleton {\n    private static Singleton instance;\n    \n    private Singleton() {\n        // constructor privado\n    }\n    \n    public static Singleton getInstance() {\n        if (instance == null) {\n            instance = new Singleton();\n        }\n        return instance;\n    }\n    \n    // M\xe9todos adicionales de la clase Singleton\n    \n    public void doSomething() {\n        System.out.println("Singleton: Haciendo algo...");\n    }\n}\n')),(0,i.kt)("p",null,"En el main podemos crear dos objetos que acceden a la instancia \xfanica del objeto. Luego comparamos estos objetos para asegurarnos que accedieron a la misma instancia."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String[] args) {\n    Singleton singleton1 = Singleton.getInstance();\n    Singleton singleton2 = Singleton.getInstance();\n\n    singleton1.doSomething(); // Output: Singleton: Haciendo algo...\n        \n    // Verificaci\xf3n de que singleton1 y singleton2 son la misma instancia\n    if (singleton1 == singleton2) {\n        System.out.println("Las instancias de Singleton son iguales");\n    } else {\n        System.out.println("Las instancias de Singleton son diferentes");\n    }\n}\n')),(0,i.kt)("h2",{id:"consecuencias"},"Consecuencias"),(0,i.kt)("h3",{id:"positivas"},"Positivas"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Control de acceso concurrente"),(0,i.kt)("li",{parentName:"ol"},"Un objeto singleton se instancia una \xfanica vez"),(0,i.kt)("li",{parentName:"ol"},"Objeto disponible en un estado controlado"),(0,i.kt)("li",{parentName:"ol"},"Puede implementar interfaces"),(0,i.kt)("li",{parentName:"ol"},"F\xe1cil de implementar")),(0,i.kt)("h3",{id:"negativas"},"Negativas"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Resuelve dos problemas a la vez. No sigue el Single Responsibility Principle"),(0,i.kt)("li",{parentName:"ol"},"Su estado siempre activo complica unit testing")),(0,i.kt)("h2",{id:"implementaci\xf3n"},"Implementaci\xf3n"),(0,i.kt)("p",null,"Conexi\xf3n singleton a una base de datos en java"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\npublic class MySQLDatabaseConnection {\n    private static MySQLDatabaseConnection instance;\n    private Connection connection;\n    \n    private final String url = "jdbc:mysql://localhost:3306/mydatabase";\n    private final String username = "your-username";\n    private final String password = "your-password";\n    \n    private MySQLDatabaseConnection() {\n        // Constructor privado\n    }\n    \n    public static MySQLDatabaseConnection getInstance() {\n        if (instance == null) {\n            instance = new MySQLDatabaseConnection();\n        }\n        return instance;\n    }\n    \n    public Connection getConnection() {\n        if (connection == null) {\n            try {\n                connection = DriverManager.getConnection(url, username, password);\n                System.out.println("Conexi\xf3n a la base de datos establecida.");\n            } catch (SQLException e) {\n                System.out.println("Error al establecer la conexi\xf3n: " + e.getMessage());\n            }\n        }\n        return connection;\n    }\n}\n\n')),(0,i.kt)("h2",{id:"relaci\xf3n-con-otros-patrones"},"Relaci\xf3n con otros patrones"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Builder"),(0,i.kt)("li",{parentName:"ol"},"Factory Method"),(0,i.kt)("li",{parentName:"ol"},"Adapter"),(0,i.kt)("li",{parentName:"ol"},"Decorator"),(0,i.kt)("li",{parentName:"ol"},"Proxy"),(0,i.kt)("li",{parentName:"ol"},"Observer")))}d.isMDXComponent=!0},8291:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Solucion Singleton-700d3ab66bc70d37807c81523f3e040d.jpeg"}}]);