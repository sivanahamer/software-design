"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[808],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7416:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={},o=void 0,s={unversionedId:"patterns/estructurales/bridge/content/Consecuencias",id:"patterns/estructurales/bridge/content/Consecuencias",title:"Consecuencias",description:"Ventajas",source:"@site/docs/5.patterns/estructurales/bridge/content/Consecuencias.md",sourceDirName:"5.patterns/estructurales/bridge/content",slug:"/patterns/estructurales/bridge/content/Consecuencias",permalink:"/software-design/docs/patterns/estructurales/bridge/content/Consecuencias",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/5.patterns/estructurales/bridge/content/Consecuencias.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Bridge",permalink:"/software-design/docs/patterns/estructurales/bridge/"},next:{title:"Patr\xf3n Bridge",permalink:"/software-design/docs/patterns/estructurales/bridge/content/Definicion_Patron_Bridge"}},c={},l=[{value:"Ventajas",id:"ventajas",level:2},{value:"Desventajas",id:"desventajas",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"ventajas"},"Ventajas"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Separa  interfaz  e  implementaci\xf3n:  Una implementaci\xf3n  de  una  abstracci\xf3n no  est\xe1  permanentemente  confinada  a  una  interfaz,  ya  que  puede  ser configurada en tiempo de ejecuci\xf3n.  Adem\xe1s,  un  objeto  tiene  la  posibilidad de  cambiar  su  implementaci\xf3n  en  tiempo de ejecuci\xf3n. ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Desacopla las clases Abstraction e  Implementor:  provoca que  se  elimine  en  tiempo  de compilaci\xf3n las dependencias sobre una clase de implementaci\xf3n.\nMejora  la extensibilidad:  se  puede  extender  en  forma  independiente  las jerarqu\xedas de Abstraction e Implementor. ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Oculta a los clientes los detalles de implementaci\xf3n: Se puede proteger a los clientes de los detalles de implementaci\xf3n."))),(0,a.kt)("p",null,"(Sandra, A  y Perez, V, 2007, p.61)"),(0,a.kt)("h2",{id:"desventajas"},"Desventajas"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Aparece un nivel adicional de direccionamiento indirecto: El patr\xf3n logra flexibilidad al introducir un nivel adicional de direccionamiento indirecto (El Implementor es la clase que fue delegada por el Abstraction de realizar la implementaci\xf3n), lo que hace que el Abstraction dependa de un objeto Implementor.")),(0,a.kt)("p",null,"(W3sdesign, s.f)"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/software-design/docs/patterns/estructurales/bridge/"},"Regresar al Readme")))}d.isMDXComponent=!0}}]);